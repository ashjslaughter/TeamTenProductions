@model miVacationSurfer.LocationReview

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Location Review</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.LocationRating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="rating" data-max="5" data-min="1" id="LocationRating" name="LocationRating" data-empty-value="0" type="number" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationPro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LocationPro, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationPro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationCon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LocationCon, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationCon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationReviewDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LocationReviewDetails, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationReviewDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn" />
            </div>
        </div>
    </div>
}

<div>
    <input type="button" value="Back to List" class="btn" onclick="location.href='@Url.Action("Index", "LocationReview")'" />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#RegionId").change(function () {
            $("#LocationId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetLocations")', // we are calling json method

                dataType: 'json',

                data: { regionId: $("#RegionId").val() },
               // here we are get value of selected country and passing same valueas inputto json method GetStates.

                success: function (regionLocations) {
                    // states contains the JSON formatted list
                    // of states passed from the controller

                    $.each(regionLocations, function (i, location) {
                    $("#LocationId").append('<option value="' + location.Value + '">' +
                         location.Text + '</option>');
                    // here we are adding option for States

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve locations.' + ex);
}
            });
            return false;
        })
    });

    </script>


}