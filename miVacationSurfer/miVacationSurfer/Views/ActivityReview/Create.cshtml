@model miVacationSurfer.ActivityReview

@{
    ViewBag.Title = "Create";
}

<h2>Create A Review</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <form>
    <div class="form-horizontal">
        <h4>Review An Activity</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  
            <div class="form-group">
                @Html.LabelFor(model => model.Seasons, "Season", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SeasonId", (SelectList)ViewData["seasons"], "Please Select a Season", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Seasons, "", new { @class = "text-danger" })
                </div>
            </div>
           

            <div class="form-group">

                @Html.LabelFor(model => model.ActivityId, "Activity", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ActivityId", new SelectList(string.Empty, "ActivityId", "ActivityName"), "Please Select an Activity", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ActivityId, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">

            @Html.Label("Where did you go and what did you do?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ActivityReviewDetails, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityReviewDetails, "", new { @class = "text-danger" })
            </div>


            
            <div class="form-group">
                @Html.LabelFor(model => model.ActivityRating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="rating" data-max="5" data-min="1" id="ActivityRating" name="ActivityRating" data-empty-value="0" type="number" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ActivityDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActivityDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActivityDate, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.ActivityPro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ActivityPro, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActivityPro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ActivityCon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ActivityCon, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActivityCon, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn" />
                </div>
            </div>
        </div>
       </div>
    </form>
}

    
 
<div>
    <input type="button" Value="Back to List" class="btn btn-sm" onclick="location.href='@Url.Action("Index", "ActivityReview")'"/>
        
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#SeasonId").change(function () {
            $("#ActivityId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetActivitys")', // we are calling json method

                dataType: 'json',

                data: { seasonId: $("#SeasonId").val() },
               // here we are get value of selected country and passing same valueas inputto json method GetStates.

                success: function (seasonActivitys) {
                    // states contains the JSON formatted list
                    // of states passed from the controller

                    $.each(seasonActivitys, function (i, activity) {
                    $("#ActivityId").append('<option value="' + activity.Value + '">' +
                         activity.Text + '</option>');
                    // here we are adding option for Activity

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve activities.' + ex);
                }
            });
            return false;
        })
    });
</script>
}
